name: Auto Update Worker

on:
  push:
    branches:
      - main
  schedule:
    - cron: "0 1 * * *" # 每天凌晨1点自动运行
  workflow_dispatch:

permissions:
  contents: write

jobs:
  update:
    runs-on: ubuntu-latest
    steps:
      - name: 初始化仓库
        uses: actions/checkout@v4

      - name: 获取当前本地版本
        id: get_local_version
        run: |
          if [ -f version.txt ]; then
            LOCAL_VERSION=$(cat version.txt)
          else
            LOCAL_VERSION=""
          fi
          echo "LOCAL_VERSION=$LOCAL_VERSION" >> $GITHUB_ENV

      - name: 获取最新 Pre-release 和 Latest
        id: get_release
        run: |
          API_URL="https://api.github.com/repos/bia-pain-bache/BPB-Worker-Panel/releases"
          RESPONSE=$(curl -s "$API_URL")

          # 获取最新 Pre-release
          PRE_RELEASE=$(echo "$RESPONSE" | jq -r '.[] | select(.prerelease==true) | {tag:.tag_name, url:(.assets[]?|select(.name=="worker.zip")|.browser_download_url), date:.published_at} ' | head -n 1)
          PRE_TAG=$(echo "$PRE_RELEASE" | jq -r '.tag')
          PRE_URL=$(echo "$PRE_RELEASE" | jq -r '.url')
          PRE_DATE=$(echo "$PRE_RELEASE" | jq -r '.date')

          # 获取最新正式版 Latest
          LATEST_RELEASE=$(echo "$RESPONSE" | jq -r '.[] | select(.prerelease==false) | {tag:.tag_name, url:(.assets[]?|select(.name=="worker.zip")|.browser_download_url), date:.published_at} ' | head -n 1)
          LATEST_TAG=$(echo "$LATEST_RELEASE" | jq -r '.tag')
          LATEST_URL=$(echo "$LATEST_RELEASE" | jq -r '.url')
          LATEST_DATE=$(echo "$LATEST_RELEASE" | jq -r '.date')

          echo "PRE_TAG=$PRE_TAG" >> $GITHUB_ENV
          echo "PRE_URL=$PRE_URL" >> $GITHUB_ENV
          echo "PRE_DATE=$PRE_DATE" >> $GITHUB_ENV

          echo "LATEST_TAG=$LATEST_TAG" >> $GITHUB_ENV
          echo "LATEST_URL=$LATEST_URL" >> $GITHUB_ENV
          echo "LATEST_DATE=$LATEST_DATE" >> $GITHUB_ENV

          echo "Pre-release: $PRE_TAG ($PRE_DATE)"
          echo "Latest: $LATEST_TAG ($LATEST_DATE)"

      - name: 判断哪个版本更新
        id: check_update
        run: |
          if [ "$(date -d "$PRE_DATE" +%s)" -gt "$(date -d "$LATEST_DATE" +%s)" ]; then
            FINAL_TAG=$PRE_TAG
            FINAL_URL=$PRE_URL
            SOURCE="Pre-release"
          else
            FINAL_TAG=$LATEST_TAG
            FINAL_URL=$LATEST_URL
            SOURCE="Latest"
          fi

          if [ -z "$LOCAL_VERSION" ]; then
            echo "首次运行，本地无 version.txt，将更新为 $SOURCE ($FINAL_TAG)"
            echo "UPDATE_NEEDED=true" >> $GITHUB_ENV
          elif [ "$LOCAL_VERSION" = "$FINAL_TAG" ]; then
            echo "UPDATE_NEEDED=false" >> $GITHUB_ENV
            echo "当前已是最新 $SOURCE ($FINAL_TAG)"
          else
            echo "UPDATE_NEEDED=true" >> $GITHUB_ENV
            echo "发现新版本 $SOURCE ($FINAL_TAG)"
          fi

          echo "FINAL_TAG=$FINAL_TAG" >> $GITHUB_ENV
          echo "FINAL_URL=$FINAL_URL" >> $GITHUB_ENV
          echo "SOURCE=$SOURCE" >> $GITHUB_ENV

      - name: 更新版本
        if: env.UPDATE_NEEDED == 'true'
        run: |
          shopt -s extglob
          rm -rf !( .git )
          wget -O worker.zip "$FINAL_URL"
          unzip -o worker.zip
          rm worker.zip
          echo "$FINAL_TAG" > version.txt

      - name: 提交更新
        if: env.UPDATE_NEEDED == 'true'
        uses: stefanzweifel/git-auto-commit-action@v5
        with:
          commit_message: "🔄 自动同步最新 ${{ env.SOURCE }} Worker：${{ env.FINAL_TAG }}"
          commit_author: "github-actions[bot] <github-actions[bot]@users.noreply.github.com>"
          push_options: --force
